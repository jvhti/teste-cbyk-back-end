{"version":3,"sources":["scss/Input.module.scss","scss/MapPreviewer.module.scss","components/MapControl.js","components/Controls.js","components/MapPreviewer.js","components/Results.js","components/Alert.js","containers/App.js","reportWebVitals.js","index.js"],"names":["module","exports","MapControl","props","className","classes","Label","children","Input","onChange","ev","setValue","target","value","type","min","max","React","memo","Controls","width","setWidth","height","setHeight","airportsCount","setAirportsCount","cloudsCount","setCloudsCount","onSimulate","Fragment","style","marginRight","onClick","MapPreviewer","rows","curMap","map","row","index","reduce","ac","cur","i","push","MapPreview","Results","textAlign","currentDay","maps","length","setCurrentDay","dayOfFirst","dayForAll","Alert","App","useState","mapWidth","setMapWidth","mapHeight","setMapHeight","mapAirportsCount","setMapAirportsCount","mapCloudsCount","setMapCloudsCount","loading","setLoading","error","setError","setMaps","setDayOfFirst","setDayForAll","simulate","useCallback","fetch","then","res","ok","json","catch","err","errors","join","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,iBCAvDD,EAAOC,QAAU,CAAC,WAAa,mC,gKCEzBC,EAAa,SAACC,GAClB,OAAO,wBAAOC,UAAWC,IAAQC,MAA1B,UACJH,EAAMI,SADF,KACa,uBAAOH,UAAWC,IAAQG,MAAOC,SAAU,SAACC,GAAD,OAAQP,EAAMQ,UAAUD,EAAGE,OAAOC,QACtEC,KAAMX,EAAMW,MAAQ,SACpBD,MAAOV,EAAMU,MAAOE,IAAKZ,EAAMY,IAAKC,IAAKb,EAAMa,UAI7DC,MAAMC,KAAKhB,GCMXiB,EAdEF,IAAMC,MAAK,YAAqH,IAAnHE,EAAkH,EAAlHA,MAAOC,EAA2G,EAA3GA,SAAUC,EAAiG,EAAjGA,OAAQC,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,cAAeC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,WAC9H,OAAO,eAAC,IAAMC,SAAP,WACL,cAAC,EAAD,CAAYhB,MAAOO,EAAOL,IAAK,GAAIJ,SAAUU,EAA7C,qBACA,sBAAMS,MAAO,CAACC,YAAa,GAA3B,eACA,cAAC,EAAD,CAAYlB,MAAOS,EAAQP,IAAK,GAAIJ,SAAUY,EAA9C,oBACA,uBACA,cAAC,EAAD,CAAYV,MAAOW,EAAeT,IAAK,EAAGJ,SAAUc,EAApD,sCACA,uBACA,cAAC,EAAD,CAAYZ,MAAOa,EAAaX,IAAK,EAAGJ,SAAUgB,EAAlD,kCACA,uBACA,wBAAQK,QAASJ,EAAjB,2B,gBCOWK,EAhBMhB,IAAMC,MAAK,YAAe,IACvCgB,EADsC,EAAZC,OACZC,KAAI,SAACC,EAAKC,GAAN,OACpB,6BACGD,EAAIE,QAAO,SAACC,EAAIC,EAAKC,GAEpB,OADAF,EAAGG,KAAK,6BAAaF,GAAJC,IACVF,IACN,KAJIF,MAOb,OAAO,uBAAOlC,UAAWC,IAAQuC,WAA1B,SACL,gCACCV,SCIUW,EAfC5B,IAAMC,MAAK,SAACf,GAC1B,OAAO,eAAC,IAAM0B,SAAP,WACL,qBAAIC,MAAO,CAACgB,UAAW,UAAvB,kBAA6D,IAArB3C,EAAM4C,WAAmB,UAAY5C,EAAM4C,cACnF,cAAC,EAAD,CAAcZ,OAAQhC,EAAM6C,KAAK7C,EAAM4C,cAEvC,cAAC,EAAD,CAAYjC,KAAK,QAAQD,MAAOV,EAAM6C,KAAKC,OAAS,EAAI9C,EAAM4C,WAAa,EAAI5C,EAAM4C,WAAYhC,IAAI,IACzFC,IAAKb,EAAM6C,KAAKC,OAAS,EACzBtC,SAAUR,EAAM+C,cAF5B,uCAIA,4CACA,gFAAgD/C,EAAMgD,cACtD,oFAAoDhD,EAAMiD,mBCT/CC,G,MAJD,SAAClD,GACb,OAAO,wDAA2BA,EAAMI,cCuD3B+C,MAnDf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGmCJ,mBAAS,GAH5C,mBAGNK,EAHM,KAGYC,EAHZ,OAI+BN,mBAAS,GAJxC,mBAINO,EAJM,KAIUC,EAJV,OAKuBR,mBAAS,GALhC,mBAKNR,EALM,KAKMG,EALN,OAOiBK,oBAAS,GAP1B,mBAONS,EAPM,KAOGC,EAPH,OAQaV,mBAAS,MARtB,mBAQNW,EARM,KAQCC,EARD,OAUWZ,mBAAS,MAVpB,mBAUNP,EAVM,KAUAoB,EAVA,OAWuBb,mBAAS,GAXhC,mBAWNJ,EAXM,KAWMkB,EAXN,OAYqBd,mBAAS,GAZ9B,mBAYNH,EAZM,KAYKkB,EAZL,KAcPC,EAAWC,uBAAY,WAC3BtB,EAAc,GACdkB,EAAQ,MACRH,GAAW,GACXQ,MAAM,0CAAD,OAA2CjB,EAA3C,mBAA8DE,EAA9D,0BAAyFE,EAAzF,wBAAyHE,IACzHY,MAAK,SAACC,GACL,IAAKA,EAAIC,GAAI,MAAMD,EACnB,OAAOA,EAAIE,UAEZH,MAAK,SAACC,GACLP,EAAQO,EAAI3B,MACZqB,GAAeM,EAAIxB,YACnBmB,GAAcK,EAAIvB,cAEnB0B,OAAM,SAACC,GACkB,oBAAbA,EAAIF,KACbE,EAAIF,OAAOH,MAAK,SAACK,GAAD,OAASZ,EAASY,EAAIC,OAAOC,KAAK,UAElDd,EAAS,gCAEZe,SAAQ,kBAAMjB,GAAW,QAC7B,CAACT,EAAUE,EAAWE,EAAkBE,IAE3C,OACI,iCACE,cAAC,EAAD,CAAU1C,MAAOoC,EAAUnC,SAAUoC,EAAanC,OAAQoC,EAAWnC,UAAWoC,EACtEnC,cAAeoC,EAAkBnC,iBAAkBoC,EAAqBnC,YAAaoC,EACrFnC,eAAgBoC,EAAmBnC,WAAY2C,MAEtDvB,GAAS,cAAC,EAAD,CAASA,KAAMA,EAAMD,WAAYA,EAAYG,cAAeA,EAAeC,WAAYA,EAC9EC,UAAWA,IAC/BY,GAAW,qBAAK5D,UAAU,oCAC1B8D,GAAS,cAAC,EAAD,UAAQA,QCzCXiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c679cd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1FCZ5\",\"Label\":\"Input_Label__2NuE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapPreview\":\"MapPreviewer_MapPreview__1_Isy\"};","import classes from \"../scss/Input.module.scss\";\nimport React from \"react\";\n\nconst MapControl = (props) => {\n  return <label className={classes.Label}>\n    {props.children}: <input className={classes.Input} onChange={(ev) => props.setValue(+ev.target.value)}\n                             type={props.type || \"number\"}\n                             value={props.value} min={props.min} max={props.max}/>\n  </label>;\n}\n\nexport default React.memo(MapControl);\n","import React from \"react\";\nimport MapControl from \"./MapControl\";\n\nconst Controls = React.memo(({width, setWidth, height, setHeight, airportsCount, setAirportsCount, cloudsCount, setCloudsCount, onSimulate}) => {\n  return <React.Fragment>\n    <MapControl value={width} min={10} setValue={setWidth}>Largura</MapControl>\n    <span style={{marginRight: 5}}>x</span>\n    <MapControl value={height} min={10} setValue={setHeight}>Altura</MapControl>\n    <br/>\n    <MapControl value={airportsCount} min={3} setValue={setAirportsCount}>Quantidade de Aeroportos</MapControl>\n    <br/>\n    <MapControl value={cloudsCount} min={4} setValue={setCloudsCount}>Quantidade de Nuvens</MapControl>\n    <br/>\n    <button onClick={onSimulate}>Simular</button>\n  </React.Fragment>;\n});\n\nexport default Controls;\n","import classes from \"../scss/MapPreviewer.module.scss\";\nimport React from \"react\";\n\n\nconst MapPreviewer = React.memo(({curMap}) => {\n  const rows = curMap.map((row, index) =>\n      <tr key={index}>\n        {row.reduce((ac, cur, i) => {\n          ac.push(<td key={i}>{cur}</td>);\n          return ac;\n        }, [])}\n      </tr>);\n\n  return <table className={classes.MapPreview}>\n    <tbody>\n    {rows}\n    </tbody>\n  </table>;\n});\n\nexport default MapPreviewer;\n","import React from \"react\";\nimport MapPreviewer from \"./MapPreviewer\";\nimport MapControl from \"./MapControl\";\n\nconst Results = React.memo((props) => {\n  return <React.Fragment>\n    <h2 style={{textAlign: 'center'}}>Dia: {props.currentDay === 0 ? \"Inicial\" : props.currentDay}</h2>\n    <MapPreviewer curMap={props.maps[props.currentDay]}/>\n\n    <MapControl type=\"range\" value={props.maps.length - 1 < props.currentDay ? 0 : props.currentDay} min=\"0\"\n                max={props.maps.length - 1}\n                setValue={props.setCurrentDay}>Passos da Simulação</MapControl>\n\n    <h2>Resultado:</h2>\n    <h4>Dias até primeiro aeroporto ficar coberto: {props.dayOfFirst}</h4>\n    <h4>Dias até todos os aeroportos ficarem cobertos: {props.dayForAll}</h4>\n  </React.Fragment>;\n});\n\nexport default Results;\n","import React from 'react';\n\nconst Alert = (props) => {\n  return <p>Ocorreu um erro! Erro: {props.children}</p>\n};\n\nexport default Alert;\n","import '../scss/App.scss';\nimport React, {useCallback, useState} from \"react\";\nimport Controls from \"../components/Controls\";\nimport Results from \"../components/Results\";\nimport 'pure-css-loader/dist/css-loader.css';\nimport Alert from \"../components/Alert\";\n\nfunction App() {\n  const [mapWidth, setMapWidth] = useState(10);\n  const [mapHeight, setMapHeight] = useState(10);\n  const [mapAirportsCount, setMapAirportsCount] = useState(3);\n  const [mapCloudsCount, setMapCloudsCount] = useState(4);\n  const [currentDay, setCurrentDay] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [maps, setMaps] = useState(null);\n  const [dayOfFirst, setDayOfFirst] = useState(0);\n  const [dayForAll, setDayForAll] = useState(0);\n\n  const simulate = useCallback(() => {\n    setCurrentDay(0);\n    setMaps(null);\n    setLoading(true);\n    fetch(`http://localhost:80/map/generate?width=${mapWidth}&height=${mapHeight}&airportsCount=${mapAirportsCount}&cloudsCount=${mapCloudsCount}`)\n        .then((res) => {\n          if (!res.ok) throw res;\n          return res.json();\n        })\n        .then((res) => {\n          setMaps(res.maps);\n          setDayOfFirst(+res.dayOfFirst);\n          setDayForAll(+res.dayForAll);\n        })\n        .catch((err) => {\n          if (typeof err.json === 'function'){\n            err.json().then((err) => setError(err.errors.join('; ')));\n          } else\n            setError(\"Falha na requisição\");\n        })\n        .finally(() => setLoading(false));\n  }, [mapWidth, mapHeight, mapAirportsCount, mapCloudsCount]);\n\n  return (\n      <main>\n        <Controls width={mapWidth} setWidth={setMapWidth} height={mapHeight} setHeight={setMapHeight}\n                  airportsCount={mapAirportsCount} setAirportsCount={setMapAirportsCount} cloudsCount={mapCloudsCount}\n                  setCloudsCount={setMapCloudsCount} onSimulate={simulate}/>\n\n        {!!maps && (<Results maps={maps} currentDay={currentDay} setCurrentDay={setCurrentDay} dayOfFirst={dayOfFirst}\n                             dayForAll={dayForAll}/>)}\n        {loading && <div className=\"loader loader-default is-active\"></div>}\n        {error && <Alert>{error}</Alert>}\n      </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}